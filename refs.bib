
@article{floyd_1967,
	title = {Nondeterministic Algorithms},
	volume = {14},
	issn = {0004-5411, 1557-735X},
	url = {https://dl.acm.org/doi/10.1145/321420.321422},
	doi = {10.1145/321420.321422},
	abstract = {Programs to solve combinatorial search problems may often be simply written by using multiple-valued functions. Such programs, although impossible to execute directly on conventional computers, may be converted in a mechanical way into conventional backtracking programs. The process is illustrated with algorithms to find all solutions to the eight queens problem on the chessboard, and to find all simple cycles in a network.},
	pages = {636--644},
	number = {4},
	journaltitle = {Journal of the {ACM}},
	shortjournal = {J. {ACM}},
	author = {Floyd, Robert W.},
	urldate = {2024-10-28},
	date = {1967-10},
	langid = {english},
	file = {Full Text:C\:\\Users\\sms\\Zotero\\storage\\7X975TSZ\\Floyd - 1967 - Nondeterministic Algorithms.pdf:application/pdf},
}

@inreference{wikipedia_automata_theory,
	title = {Automata theory},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Automata_theory&oldid=1253341239},
	abstract = {Automata theory is the study of abstract machines and automata, as well as the computational problems that can be solved using them. It is a theory in theoretical computer science with close connections to mathematical logic. The word automata comes from the Greek word αὐτόματος, which means "self-acting, self-willed, self-moving". An automaton (automata in plural) is an abstract self-propelled computing device which follows a predetermined sequence of operations automatically. An automaton with a finite number of states is called a finite automaton ({FA}) or finite-state machine ({FSM}). The figure on the right illustrates a finite-state machine, which is a well-known type of automaton. This automaton consists of states (represented in the figure by circles) and transitions (represented by arrows).  As the automaton sees a symbol of input, it makes a transition (or jump) to another state, according to its transition function, which takes the previous state and current input symbol as its arguments.
Automata theory is closely related to formal language theory. In this context, automata are used as finite representations of formal languages that may be infinite. Automata are often classified by the class of formal languages they can recognize, as in the Chomsky hierarchy, which describes a nesting relationship between major classes of automata. Automata play a major role in the theory of computation, compiler construction, artificial intelligence, parsing and formal verification.},
	booktitle = {Wikipedia},
	urldate = {2024-10-28},
	date = {2024-10-25},
	langid = {english},
	note = {Page Version {ID}: 1253341239},
	file = {Snapshot:C\:\\Users\\sms\\Zotero\\storage\\J2NMJ45N\\Automata_theory.html:text/html},
}

@online{mitocw_theory_of_computation,
	title = {Theory of Computation {\textbar} Mathematics},
	url = {https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/},
	abstract = {This course emphasizes computability and computational complexity theory. Topics include regular and context-free languages, decidable and undecidable problems, reducibility, recursive function theory, time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems.},
	titleaddon = {{MIT} {OpenCourseWare}},
	urldate = {2024-10-29},
	langid = {english},
	file = {Snapshot:C\:\\Users\\sms\\Zotero\\storage\\W79X9TR9\\18-404j-theory-of-computation-fall-2020.html:text/html},
}

@inreference{wikipedia_pushdown_automaton,
	title = {Pushdown automaton},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Pushdown_automaton&oldid=1234414049},
	abstract = {In the theory of computation, a branch of theoretical computer science, a pushdown automaton ({PDA}) is   
a type of automaton that employs a stack.
Pushdown automata are used in theories about what can be computed by machines. They are more capable than finite-state machines but less capable than Turing machines (see below).
Deterministic pushdown automata can recognize all deterministic context-free languages while nondeterministic ones can recognize all context-free languages, with the former often used in parser design.
The term "pushdown" refers to the fact that the stack can be regarded as being "pushed down" like a tray dispenser at a cafeteria, since the operations never work on elements other than the top element.  A stack automaton, by contrast, does allow access to and operations on deeper elements.  Stack automata can recognize a strictly larger set of languages than pushdown automata.
A nested stack automaton allows full access, and also allows stacked values to be entire sub-stacks rather than just single finite symbols.},
	booktitle = {Wikipedia},
	urldate = {2024-11-05},
	date = {2024-07-14},
	langid = {english},
	note = {Page Version {ID}: 1234414049},
	file = {Snapshot:C\:\\Users\\sms\\Zotero\\storage\\HXHZFX86\\Pushdown_automaton.html:text/html},
}
